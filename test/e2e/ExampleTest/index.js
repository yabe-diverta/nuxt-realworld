const Executor = require('./Executor');
const prepare = require('./prepare');
const tasks = require('./task');

const args = process.argv.slice(2);
const options = {
  newCapture: args.includes('--newcapture'),
  headless: args.includes('--headless'),
  basicAuth: args.some(opt => /^--basicAuth=\S+:\S+$/.test(opt)),
  hasHelp: args.includes('-h') || args.includes('--help'),
};

if (options.hasHelp) {
  console.log(`

    This file is for e2e testing, auto-generated by tool.

    useage:
      node \${CURRENT DIR}  # will run puppeteer and stores result captures into \$../{CURRENT DIR}/capture
      node \${CURRENT DIR} --headless  # will run puppeteer in headless mode
      node \${CURRENT DIR} --newcapture # will run puppeteer and stores result captures into \$../{CURRENT DIR}/newcapture
      node \${CURRENT DIR} --basicAuth=user:password # will request authentication with basic auth

  `)
  return;
}

(async () => {
  try {
    await new Executor()
      .create(await prepare(options))
      .appendAll(tasks)
      .execute();
  } catch (e) {
    console.error(e);
    process.exit(1);
  }
})();
